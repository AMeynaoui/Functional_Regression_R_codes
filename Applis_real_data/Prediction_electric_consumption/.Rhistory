_HiStOrY_V2_
Xh <- c(56,162,544,924,1032,1193,1267,1270,1275,1234,1323,1397,1420,1309,1316,1284,1366,1306,1335,1287,1311,1306,1378,1231,1220,1254,1245,1189,1277,1402,1389,1258,1287,1251,1240,1164,1215,1141,1121,1151,1026,1055,1060,965,966,603,486,349,262,204,142,111,110,88,91,87,54,41,24,24)
plot(density(Xh))
which.max(density(Xh)$y)
install.packages("Rmixmod")
library(Rmixmod)
mixmodCluster(Xh,2)
effh <- c(56,162,544,924,1032,1193,1267,1270,1275,1234,1323,1397,1420,1309,1316,1284,1366,1306,1335,1287,1311,1306,1378,1231,1220,1254,1245,1189,1277,1402,1389,1258,1287,1251,1240,1164,1215,1141,1121,1151,1026,1055,1060,965,966,603,486,349,262,204,142,111,110,88,91,87,54,41,24,24)
agesH <- rep(16:75,effh)
plot(density(agesH))
plot(density(agesH[agesH>=20 & agesH<=60]))
hist(agesH[agesH>=20 && agesH<=60]))
hist(agesH[agesH>=20 && agesH<=60]))
hist(agesH[agesH>=20 && agesH<=60])
agesH[agesH>=20 && agesH<=60]
hist(agesH[agesH>=20 & agesH<=60])
plot(density(agesH[agesH>=60]))
hist(agesH[agesH>=60])
hatlambda = 1/mean(agesH[agesH>=60])
hist(agesH[agesH>=50])
hist(agesH[agesH>=60])
hatlambda = 1/mean(agesH[agesH>=60])
curve(60:75,dexp(60:75,hatlambda))
curve(dexp(x,hatlambda))
?curve
curve(dexp(x,hatlambda),60,75)
curve(dexp(x,1/hatlambda),60,75)
hist(agesH[agesH>=60])
hist(agesH[agesH>=60],freq=F)
curve(dexp(x,hatlambda),60,75,add=T)
curve(dexp(x,1/hatlambda),60,75,add=T)
plot(60:75,dexp(1:15,hatlambda),add=T)
plot(60:75,dexp(1:16,hatlambda),add=T)
hist(agesH[agesH>=60],freq=F)
points(60:75,dexp(1:16,hatlambda))
points(60:75,dexp(1:16,1/hatlambda))
points(60:75,dexp(0:15,1/hatlambda))
points(60:75,dexp(0:15,hatlambda))
?dexp
hist(agesH[agesH>=60],freq=F)
hatlambda = 1/mean(agesH[agesH>=60])
points(60:75,dexp(0:15,hatlambda))
curve(dexp(x,hatlambda))
curve(dexp(x,hatlambda),0,10)
curve(dexp(x,hatlambda),0,100)
curve(dexp(x,hatlambda),0,1000)
hist(agesH[agesH>=60],freq=F)
hist(agesH[agesH>=61],freq=F)
hatk = round(mean(agesH[agesH>=60]))
source("~/Dropbox/Enseignement/2021-2022/Statistique L3 CPES/DST2/script.R")
points(60:75,dchisq(0:15,hatk))
curve(dchisq(x,hatk),0:15)
?dchisq
hatk = mean(agesH[agesH>=60])
points(60:75,dchisq(0:15,hatk))
curve(dchisq(x,hatk),0:15)
hatk = 1/(1-60/mean(agesH[agesH>=60]))
?dpareto
points(60:75,(60/(60:75))^hatk)
60/(60:75)
points(60:75,(60/(60:75))^hatk)
hist(agesH[agesH>=60],freq=F)
points(60:75,(60/(60:75))^hatk)
points(60:75,(60/(60:75))^hatk,type='l',col='red')
hatlambda = 1/mean(agesH[agesH>=60])
points(60:75,hatlambda*exp(-hatlambda*(0:15)),type='l',col='blue')
hist(agesH[agesH<=20],freq=F)
hist(agesH[agesH<=20],freq=F,breaks=17:19)
density(agesH[agesH<=20])
plot(density(agesH[agesH<=20]))
effh <- c(56,162,544,924,1032,1193,1267,1270,1275,1234,1323,1397,1420,1309,1316,1284,1366,1306,1335,1287,1311,1306,1378,1231,1220,1254,1245,1189,1277,1402,1389,1258,1287,1251,1240,1164,1215,1141,1121,1151,1026,1055,1060,965,966,603,486,349,262,204,142,111,110,88,91,87,54,41,24,24)
barplot(effh)
?barplot
barplot(effh[5:length(effH)])
barplot(effh[5:length(effh)])
?barplot
barplot(effh[5:length(effh)],names.arg=20:75)
barplot(effh[5:length(effh)],names.arg=20:75,xlab='âge',ylab='effectif')
sum(which(agesH>=60))
source("~/Dropbox/Enseignement/2021-2022/Statistique L3 CPES/DST2/script.R")
sum(which(agesH>=60))
sum(which(agesH>=60))<length(agesH)
sum(which(agesH>=60))/length(agesH)
which(agesH>=60)
sum(agesH>=60)/length(agesH)
barplot(effh[5:length(effh)],names.arg=20:75,xlab='âge',ylab='effectif')
abline(h=20)
effh <- c(56,162,544,924,1032,1193,1267,1270,1275,1234,1323,1397,1420,1309,1316,1284,1366,1306,1335,1287,1311,1306,1378,1231,1220,1254,1245,1189,1277,1402,1389,1258,1287,1251,1240,1164,1215,1141,1121,1151,1026,1055,1060,965,966,603,486,349,262,204,142,111,110,88,91,87,54,41,24,24)
barplot(effh[5:length(effh)],names.arg=20:75,xlab='âge',ylab='effectif')
abline(v=60,lty=2,col='red')
abline(v=60-20,lty=2,col='red')
barplot(effh[5:length(effh)],names.arg=20:75,xlab='âge',ylab='effectif')
abline(v=51,lty=2,col='red')
sum(agesH>=60)
sum(agesH>=20)
mean(agesH[agesH>=20])
sum(agesH>=60)
sum(log(agesH[agesH>=60]))
khatMom = (2*40.65-80*0.93)/(2*40.65+40*0.93-2*20)
khatEMV = 3642/(3642*log(20)-15096.57)
khatEMV = -3642/(3642*log(20)-15096.57)
hatmu1 = mean(agesH[agesH>=20])
khatMom = (2*hatmu1-(a+b)*p)/(2*hatmu1+(b-a)*0.93-2*b)
source("~/Dropbox/Enseignement/2021-2022/Statistique L3 CPES/DST2/script.R")
khatEMV = sum(agesH>=b)/sum(log(agesH[agesH>=b]/b))
hist(agesH[agesH>=60],freq=F)
hist(agesH[agesH>=20],freq=F)
t = 20:75
points(p*(t<60)/(b-a)+(1-b)*khatEMV*b^khatEMV*(t>60)/t^(khatEMV+1),type='l',col='red')
p = 0.93
points(p*(t<60)/(b-a)+(1-b)*khatEMV*b^khatEMV*(t>60)/t^(khatEMV+1),type='l',col='red')
source("~/Dropbox/Enseignement/2021-2022/Statistique L3 CPES/DST2/script.R")
khatEMV = sum(agesH>=b)/sum(log(agesH[agesH>=b]/b))
khatMom = (2*hatmu1-(a+b)*p)/(2*hatmu1+(b-a)*0.93-2*b)
hatmu1 = mean(agesH[agesH>=20])
sum(log(agesH[agesH>=60]))
a = 20
b = 60
p = 0.93
khatMom = (2*hatmu1-(a+b)*p)/(2*hatmu1+(b-a)*0.93-2*b)
khatEMV = sum(agesH>=b)/sum(log(agesH[agesH>=b]/b))
t = 20:75
points(p*(t<60)/(b-a)+(1-b)*khatEMV*b^khatEMV*(t>60)/t^(khatEMV+1),type='l',col='red')
plot(t,p*(t<60)/(b-a)+(1-b)*khatEMV*b^khatEMV*(t>60)/t^(khatEMV+1),type='l',col='red')
khatMom = (2*hatmu1-(a+b)*p)/(2*hatmu1+(b-a)*0.93-2*b)
2*hatmu1-(a+b)*p
2*hatmu1+(b-a)*0.93-2*b
plot(t,p*(t<60)/(b-a)+(1-p)*khatEMV*b^khatEMV*(t>60)/t^(khatEMV+1),type='l',col='red')
plot(t,p*(t<=60)/(b-a)+(1-p)*khatEMV*b^khatEMV*(t>60)/t^(khatEMV+1),type='l',col='red')
hist(agesH[agesH>=20],freq=F)
points(t,p*(t<=60)/(b-a)+(1-p)*khatEMV*b^khatEMV*(t>60)/t^(khatEMV+1),type='l',col='red')
points(t,p*(t<=60)/(b-a)+(1-p)*khatMom*b^khatMom*(t>60)/t^(khatMom+1),type='l',col='red')
points(t,p*(t<=60)/(b-a)+(1-p)*khatMom*b^khatMom*(t>60)/t^(khatMom+1),type='l',col='blue')
hatmu1 = mean(agesH[agesH>=a])
khatMom = (2*hatmu1-(a+b)*p)/(2*hatmu1+(b-a)*0.93-2*b)
source("~/Dropbox/Enseignement/2021-2022/Statistique L3 CPES/DST2/script.R")
source("~/Dropbox/Enseignement/2021-2022/Statistique L3 CPES/DST2/script.R")
source("~/Dropbox/Enseignement/2021-2022/Statistique L3 CPES/DST2/script.R")
hatmu1 = mean(agesH[agesH>=a])
khatMom = (2*hatmu1-(a+b)*p)/(2*hatmu1+(b-a)*p-2*b)
khatEMV = sum(agesH>=b)/sum(log(agesH[agesH>=b]/b))
(a+b)*p/2+b*khatEMV*b^(khatEMV)/(khatEMV-1)
(a+b)*p/2+b*khatEMV*b/(khatEMV-1)
(a+b)*p/2+b*khatEMV/(khatEMV-1)
(a+b)*p/2+b*khatEMV*(1-p)/(khatEMV-1)
khatMom = (2*hatmu1-(a+b)*p)/(2*hatmu1+(b-a)*p-2*b)
(a+b)*p/2+b*khatMom*(1-p)/(khatMom-1)
hatmu1 = mean(agesH[agesH>=a])
khatEMV = sum(agesH>=b)/sum(log(agesH[agesH>=b])-log(b))
sum(log(agesH[agesH>=b]))
sum(agesH>=b)
n = length(agesH[agesH>=20])
Iinf = khatEMV*(1-qnorm(0.975)/sqrt(n*(1-p)))
Isup = khatEMV*(1+qnorm(0.975)/sqrt(n*(1-p)))
sample.int(44,10,replace=T)
sample.int(3,1)
sample.int(3,1)
sample.int(44,1,replace=T)
sample.int(44,1,replace=T)
X = rnorm(100,1,1/2)
mean(X)
1.15+1.64/(10*sqrt(2))
1.15-1.64/(10*sqrt(2))
sample.int(6,6)
mean(rnorm(100,3,1/2))
mean(rnorm(100,3,2))
3.13+1.28*sqrt(2)/10
3.13-1.28*sqrt(2)/10
efff = c(35,158,712,1364,1787,1960,2121,2129,2058,2091,2174,2147,2168,2104,2317,2273,2239,2281,2154,2190,2270,2349,2356,2153,2089,2117,1994,2054,2249,2386,2485,2419,2359,2338,2363,2304,2459,2301,2292,2241,2110,2223,1963,1905,1766,1289,1095,481,410,294,239,137,142,104,74,57,41,23,24,17)
agesF = rep(16:75,efff)
hist(agesF)
hist(agesF>=20)
hist(agesF[agesF>=20])
barplot(20:75,efff[5:length(efff)])
barplot(efff[5:length(efff)],names.arg = 20:75)
barplot(efff[5:length(efff)],names.arg = 20:75,xlab='age',ylab='effectif')
sum(which(agesF>=60))/length(agesF)
which(agesF>=60)
sum(agesF>=60)/length(agesF)
length(agesF)
hatmu1 =mean(agesF[agesF>=a])
sum(agesF>=60)
sum(log(agesF[agesF>=b]))
khatMom = (2*hatmu1-(a+b)*p)/(2*hatmu1+(b-a)*p-2*b)
khatEMV = sum(agesF>=b)/sum(log(agesF[agesF>=b])-log(b))
p = 0.94
khatMom = (2*hatmu1-(a+b)*p)/(2*hatmu1+(b-a)*p-2*b)
Iinf = khatEMV*(1-qnorm(0.975)/sqrt(n*(1-p)))
Isup = khatEMV*(1+qnorm(0.975)/sqrt(n*(1-p)))
source("~/Dropbox/RegressionReponseFonctionnelle/Simus/SimusPublic/Applis_real_data/Prediction_electric_consumption/Appli_donnees_elec.R")
setwd("~/Dropbox/RegressionReponseFonctionnelle/Simus/SimusPublic/Applis_real_data/Prediction_electric_consumption")
source("~/Dropbox/RegressionReponseFonctionnelle/Simus/SimusPublic/Applis_real_data/Prediction_electric_consumption/Appli_donnees_elec.R")
source("~/Dropbox/RegressionReponseFonctionnelle/Simus/SimusPublic/Applis_real_data/Prediction_electric_consumption/Appli_donnees_elec.R")
k1
source("~/Dropbox/RegressionReponseFonctionnelle/Simus/SimusPublic/Applis_real_data/Prediction_electricity_prices/mainElecWindLeibl.R")
setwd("~/Dropbox/RegressionReponseFonctionnelle/Simus/SimusPublic/Applis_real_data/Prediction_electricity_prices")
source("~/Dropbox/RegressionReponseFonctionnelle/Simus/SimusPublic/Applis_real_data/Prediction_electricity_prices/mainElecWindLeibl.R")
par(mfrow=c(1,2))
plot(range(t),range(RL.Wind),type='n',xlab='time(hour)',ylab='wind infeed (kWh)',main="Original data")
for (i in indext){
points(t,RL.Wind[,i],type='l',lty=2,col='gray')
}
points(t,Xbar,type='l',col=2,lty=2,lwd=2)
plot(range(t),range(X),type='n',xlab='time(hour)',ylab='',main='Centered data')
for (i in 1:n){
points(t,X[i,],type='l',col='lightblue')
}
abline(h=0,col='red',lwd=2)
par(mfrow=c(1,2))
plot(range(t),range(RL.Prices[,indext]),type='n',xlab='time(hour)',ylab='price (€/kWh)',main="Original data")
for (i in indext){
points(t,RL.Prices[,i],type='l',lty=2,col='gray')
}
points(t,rowMeans(RL.Prices[,indext]),type='l',col=2,lty=2,lwd=2)
plot(range(t),range(Y),type='n',xlab='time(hour)',ylab='',main='Centered data')
for (i in 1:n){
points(t,Y[i,],type='l',col="lightblue")
}
abline(h=0,col='red',lwd=2)
# Cross-validation
kappa = 0.6
Nn = 15
par(mfrow=c(1,1))
barplot(prop.table(table(res.CV$mhat)),col='blue',xlab="Dimension selected",ylab='Frequency')
hist(res.CV$pred_error,freq=F,col='orange',xlab='L^2 prediction error',main='')
par(mfrow=c(1,1))
barplot(prop.table(table(res.CV$dim_selec)),col='blue',xlab="Dimension selected",ylab='Frequency')
hist(res.CV$pred_error,freq=F,col='orange',xlab='L^2 prediction error',main='')
par(mfrow=c(1,3))
ord = sort.int(res.CV$pred_error,index.return = T)$ix
show = ord[c(1,round(n/2),n)]
par(mfrow=c(1,3))
for (i in show){
plot(t,Y[i,],type='l',xlab='t',ylab='Prediction of Y',col='lightblue',main=paste("i=",i),lwd=2)
points(t,res.CV$Yhat[i,],type='l',col='darkgreen',lty=2,lwd=2)
}
legend('topleft',c(expression(Y[i]),expression(hat(Y)[i]^(-i))),lty=c(1,2),lwd=c(2,2),col=c('lightblue','darkgreen'))
for (i in show){
Yhattestrec = exp(Yres.CV$hat[i,]+Ybar)-1
plot(t,RL.Prices[,indext[i]],type='l',xlab='t',ylab='prediction of consumption',main=paste("i=",i),col='gray',lwd=2,ylim=range(energy_data_day))
points(t,Yhattestrec,type='l',col='lightgreen',lwd=2)
}
legend('topleft',c("consumption","prediction"),lty=c(1,1),lwd=c(2,2),col=c('gray','lightgreen'))
for (i in show){
Yhattestrec = exp(res.CV$Yhat[i,]+Ybar)-1
plot(t,RL.Prices[,indext[i]],type='l',xlab='t',ylab='prediction of consumption',main=paste("i=",i),col='gray',lwd=2,ylim=range(energy_data_day))
points(t,Yhattestrec,type='l',col='lightgreen',lwd=2)
}
legend('topleft',c("consumption","prediction"),lty=c(1,1),lwd=c(2,2),col=c('gray','lightgreen'))
for (i in show){
Yhattestrec = exp(res.CV$Yhat[i,]+Ybar)-1
plot(t,RL.Prices[,indext[i]],type='l',xlab='t',ylab='prediction of consumption',main=paste("i=",i),col='gray',lwd=2,ylim=range(RL.Prices))
points(t,Yhattestrec,type='l',col='lightgreen',lwd=2)
}
legend('topleft',c("consumption","prediction"),lty=c(1,1),lwd=c(2,2),col=c('gray','lightgreen'))
for (i in show){
Yhattestrec = exp(res.CV$Yhat[i,]+Ybar)-1
plot(t,RL.Prices[,indext[i]],type='l',xlab='t',ylab='prediction of consumption',main=paste("i=",i),col='gray',lwd=2,ylim=range(RL.Prices[,indext]))
points(t,Yhattestrec,type='l',col='lightgreen',lwd=2)
}
legend('topleft',c("consumption","prediction"),lty=c(1,1),lwd=c(2,2),col=c('gray','lightgreen'))
rm(list=ls())
source("../../PCA.R")
source("../../functions_estim.R")
setwd("~/Dropbox/RegressionReponseFonctionnelle/Simus/SimusPublic/Applis_real_data/Prediction_electric_consumption")
rm(list=ls())
source("../../PCA.R")
source("../../functions_estim.R")
# Data
energy_data <- read.csv("energydata_complete.csv")
View(energy_data)
energy_data$date <- strptime(as.character(energy_data$date),format="%Y-%m-%d %H:%M:%S")
energy_data$date <- as.POSIXct(energy_data$date,tz = "UTC")
dim(energy_data)
names(energy_data)
n = 137
t = seq(from=0,by=24/144,length=144)
# From the temporal series energy_data[,2] to a matrix of functional data
energy_data_day = matrix(energy_data[1:19728,2],137,144,byrow=TRUE)
par(mfrow=c(1,1))
plot(range(t),range(energy_data_day),type='n',xlab='Time(hour)',ylab='Electric consumption (kWh)')
for (i in 1:n){
points(t,energy_data_day[i,],type='l',col='gray')
}
# Covariable X : log consommation du jour j recentree
Xinit = log(energy_data_day[1:(n-1),])
Xbar = colMeans(Xinit)
X = Xinit-Xbar
plot(range(t),range(X),type='n',xlab='time(hour)',ylab=expression(X[i]))
for (i in 1:(n-1)){
points(t,X[i,],type='l',col='lightblue')
}
# Covariable X: log consumption of day j recentered
Xinit = log(energy_data_day[1:(n-1),])
Xbar = colMeans(Xinit)
X = Xinit-Xbar
plot(range(t),range(X),type='n',xlab='time(hour)',ylab=expression(X[i]))
for (i in 1:(n-1)){
points(t,X[i,],type='l',col='lightblue')
}
abline(h=0,col='red',lty=2)
# Variable Y a predire : log consommation du jour j+1
Yinit = log(energy_data_day[2:n,])
Ybar = colMeans(Yinit)
Y = Yinit-Ybar
n = nrow(X)
p = ncol(X)
par(mfrow=c(1,2))
plot(t,X[1,],type='l',main=expression(X[1]))
plot(t,Y[1,],type='l',main=expression(Y[1]))
plot(range(t),range(Xinit),type='n',xlab='time(hour)',ylab='Consumption of appliances (kWh)')
plot(range(t),range(Xinit),type='n',xlab='time(hour)',ylab='Electric consumption (kWh)')
for (i in 1:(n-1)){
points(t,Xinit[i,],type='l',col='lightblue')
}
points(t,Xbar,type='l',col='red',lty=2)
rm(list=ls())
source("../../PCA.R")
source("../../functions_estim.R")
# Data
energy_data <- read.csv("energydata_complete.csv")
View(energy_data)
energy_data$date <- strptime(as.character(energy_data$date),format="%Y-%m-%d %H:%M:%S")
energy_data$date <- as.POSIXct(energy_data$date,tz = "UTC")
dim(energy_data)
names(energy_data)
n = 137
t = seq(from=0,by=24/144,length=144)
# From the temporal series energy_data[,2] to a matrix of functional data
energy_data_day = matrix(energy_data[1:19728,2],137,144,byrow=TRUE)
# Covariable X: log consumption of day j recentered
Xinit = log(energy_data_day[1:(n-1),])
Xbar = colMeans(Xinit)
X = Xinit-Xbar
plot(range(t),range(Xinit),type='n',xlab='time(hour)',ylab='Electric consumption (kWh)')
for (i in 1:(n-1)){
points(t,Xinit[i,],type='l',col='lightblue')
}
points(t,Xbar,type='l',col='red',lty=2)
# Covariable X: log consumption of day j recentered
Xinit = energy_data_day[1:(n-1),]
Xbar = colMeans(log(Xinit))
X = log(Xinit)-Xbar
plot(range(t),range(Xinit),type='n',xlab='time(hour)',ylab='Electric consumption (kWh)')
for (i in 1:(n-1)){
points(t,Xinit[i,],type='l',col='lightblue')
}
points(t,Xbar,type='l',col='red',lty=2)
# Covariable X: log consumption of day j recentered
Xinit = energy_data_day[1:(n-1),]
Xbar = colMeans(Xinit)
X = log(Xinit)-log(colMeans(Xinit))
plot(range(t),range(Xinit),type='n',xlab='time(hour)',ylab='Electric consumption (kWh)')
for (i in 1:(n-1)){
points(t,Xinit[i,],type='l',col='lightblue')
}
points(t,Xbar,type='l',col='red',lty=2)
plot(range(t),range(X),type='n',xlab='time(hour)',ylab=expression(X[i]))
for (i in 1:(n-1)){
points(t,X[i,],type='l',col='lightblue')
}
abline(h=0,col='red',lty=2)
plot(range(t),range(Xinit),type='n',xlab='time(hour)',ylab='Electric consumption (kWh)')
for (i in 1:(n-1)){
points(t,Xinit[i,],type='l',col='gray')
}
points(t,Xbar,type='l',col='red',lty=2)
plot(range(t),range(X),type='n',xlab='time(hour)',ylab=expression(X[i]))
for (i in 1:(n-1)){
points(t,X[i,],type='l',col='lightblue')
}
abline(h=0,col='red',lty=2)
# Variable Y a predire : log consommation du jour j+1
Yinit = log(energy_data_day[2:n,])
# Variable Y a predire : log consommation du jour j+1
Yinit = energy_data_day[2:n,]
rm(list=ls())
source("../../PCA.R")
source("../../functions_estim.R")
# Data
energy_data <- read.csv("energydata_complete.csv")
View(energy_data)
energy_data$date <- strptime(as.character(energy_data$date),format="%Y-%m-%d %H:%M:%S")
energy_data$date <- as.POSIXct(energy_data$date,tz = "UTC")
dim(energy_data)
names(energy_data)
n = 137
t = seq(from=0,by=24/144,length=144)
# From the temporal series energy_data[,2] to a matrix of functional data
energy_data_day = matrix(energy_data[1:19728,2],137,144,byrow=TRUE)
# Covariable X: log consumption of day j recentered
Xinit = energy_data_day[1:(n-1),]
Xinitbar = colMeans(Xinit)
Xbar = log(colMeans(Xinit))
X = log(Xinit)-Xbar
plot(range(t),range(Xinit),type='n',xlab='time(hour)',ylab='Electric consumption (kWh)')
for (i in 1:(n-1)){
points(t,Xinit[i,],type='l',col='gray')
}
points(t,Xinitbar,type='l',col='red',lty=2)
plot(range(t),range(X),type='n',xlab='time(hour)',ylab=expression(X[i]))
for (i in 1:(n-1)){
points(t,X[i,],type='l',col='lightblue')
}
abline(h=0,col='red',lty=2)
# Variable Y a predire : log consommation du jour j+1
Yinit = energy_data_day[2:n,]
Ybar = colMeans(log(Yinit))
Y = log(Yinit)-Ybar
res.CV <- CVpred(X,Y,kappa,Nn)
# Cross-validation
kappa = 0.6
Nn = 15
res.CV <- CVpred(X,Y,kappa,Nn)
source("~/Dropbox/RegressionReponseFonctionnelle/Simus/SimusPublic/Applis_real_data/Prediction_electric_consumption/Appli_donnees_elec.R")
